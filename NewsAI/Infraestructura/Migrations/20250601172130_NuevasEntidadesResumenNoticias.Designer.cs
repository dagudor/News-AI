// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace NewsAI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250601172130_NuevasEntidadesResumenNoticias")]
    partial class NuevasEntidadesResumenNoticias
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("NewsAI.Dominio.Entidades.Configuracion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Audio")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Email")
                        .HasColumnType("INTEGER");

                    b.Property<string>("GradoDesarrolloResumen")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Hashtags")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Lenguaje")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Configuraciones");
                });

            modelBuilder.Entity("NewsAI.Dominio.Entidades.ConfiguracionUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ConfiguracionId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ConfiguracionId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Configuracion_usuarios");
                });

            modelBuilder.Entity("NewsAI.Dominio.Entidades.NoticiaExtraida", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Contenido")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaPublicacion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Fuente")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("Hashtags")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Noticia");
                });

            modelBuilder.Entity("NewsAI.Dominio.Entidades.ResumenGenerado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ConfiguracionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ContenidoResumen")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("EmailEnviado")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FechaGeneracion")
                        .HasColumnType("TEXT");

                    b.Property<int>("NoticiasProcesadas")
                        .HasColumnType("INTEGER");

                    b.Property<double>("TiempoProcesamiento")
                        .HasColumnType("REAL");

                    b.Property<string>("UrlOrigen")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ConfiguracionId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Resumen");
                });

            modelBuilder.Entity("NewsAI.Dominio.Entidades.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("FechaAlta")
                        .HasColumnType("TEXT");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("NewsAI.Dominio.Entidades.Configuracion", b =>
                {
                    b.HasOne("NewsAI.Dominio.Entidades.Usuario", "Usuario")
                        .WithMany("Configuraciones")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("NewsAI.Dominio.Entidades.ConfiguracionUsuario", b =>
                {
                    b.HasOne("NewsAI.Dominio.Entidades.Configuracion", "Configuracion")
                        .WithMany()
                        .HasForeignKey("ConfiguracionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewsAI.Dominio.Entidades.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Configuracion");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("NewsAI.Dominio.Entidades.ResumenGenerado", b =>
                {
                    b.HasOne("NewsAI.Dominio.Entidades.Configuracion", "Configuracion")
                        .WithMany()
                        .HasForeignKey("ConfiguracionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewsAI.Dominio.Entidades.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Configuracion");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("NewsAI.Dominio.Entidades.Usuario", b =>
                {
                    b.Navigation("Configuraciones");
                });
#pragma warning restore 612, 618
        }
    }
}
